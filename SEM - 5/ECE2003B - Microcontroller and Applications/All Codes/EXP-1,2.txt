*************************************************************************************************
// 1 - Addition of n 8-bit numbers

MOV R0,#30H; pointer to memory
MOV R1,#05H; counter
MOV 36H,#00H; initialize sum=0
MOV 35H,#00H; initialize carry=0
MOV A,#00H;
L2:ADD A,@R0; A=A+@R0
DA A
JNC L1
INC 35H; store carry
L1: INC RO; point to next loc
DJNZ R1,L2
MOV 36H,A;
L3:SJMP L3;
END

*************************************************************************************************
// 2 - Square of a number with DPTR

MOV R0,#30H;
MOV A,@R0;
MOV DPTR,#2000H;
MOVC A,@A+DPTR;
MOV 31H,A;
L1:SJMP L1

ORG 2000H
    DATA1: DB 0,1,4,9,16,25,36,49,64,81,100
END


**************************************************************************************************
// 3- Addition of two 16-bit numbers

MOV A,30H; A=LB1
ADD A,31H; A=A+LB2=LBR
MOV 36H,A; LBR STR
CLR A;
MOV A,32H; A=HB1
ADDC A,33H; A=A+HB2=HBR
MOV 35H,A; HBR STR
JNC L1;
INC 34H; INCREMENT CARRY
L1:SJMP L1;
END

*******************************************************************************************************
// 4 - Finding No.of ODD and EVEN Nos. from set of 10 numbers

MOV R0,#30H
MOV R1,30AH
MOV 0BH,R1
MOV R2,OBH
MOV 3AH,#00H
MOV 3BH,#00H
L2:MOV A,@R0
RRC A
JNC L1
INC 3AH
L1:INC R0
DJNZ R1,L2
CLR C
MOV A,R2
SUBB A,3AH
MOV 3BH,A
L3:SJMP L3
END

************************************************************************
//5 - Finding No.of Positive and Negative Integers from set of 10 numbers

MOV R0,#30H
MOV R1,#OAH
MOV OBH,R1
MOV R2,OBH
MOV 3AH,#00H
MOV 3BH,#00H
L2:MOV A,@RO
RLC A
JNC L1
INC 3AH
L1:INC R0
DJNZ R1,L2
CLR C
MOV A,R2
SUBB A,3AH
MOV 3BH,A
L3:SJMP L3
END





